---
# cluster_setup_mode  10
  - name: Check if {{ primary_domain }} exist | cluster_setup_mode  10
    stat:
      path: "/etc/nginx/conf.d/{{ primary_domain }}.conf"
    register: nginx_cluster_setup_mode_10

  - name: Fail if {{ primary_domain }} exist | cluster_setup_mode 10
    fail:
      msg: "{{ primary_domain }} not exist | cluster_setup_mode 10"
    when: nginx_cluster_setup_mode_10.stat.exists == False

  - name: Determine if the user {{ primary_domain_user }} exist - Step 1
    shell: "grep {{ primary_domain_user }}: /etc/passwd |  awk -F':' '{print $3}'"
    changed_when: false
    register: existing_user_domain

  - name: Fail if user {{ primary_domain_user }} not exist - Step 2
    fail:
      msg: "User {{ primary_domain_user }} not exist "
    when: existing_user_domain.stdout == ""

  - name: Determine if the user {{ primary_domain_user }} is associated with domain {{ primary_domain }} - Step 1
    shell: "grep {{ primary_domain_user }}: /etc/passwd |  awk -F':' '{print $6}'"
    changed_when: false
    register: get_home_dir_user_1

  - name: Determine if the user {{ primary_domain_user }} is associated with domain {{ primary_domain }} - Step 2
    shell: "if grep -q '{{ get_home_dir_user_1.stdout }}/' /etc/nginx/conf.d/{{ primary_domain }}.conf; then echo 'yes'; else echo 'no'; fi"
    changed_when: false
    register: get_home_dir_user_2
    ignore_errors: yes
    failed_when: get_home_dir_user_2.stdout == ""
    check_mode: no

  - name: Fail if the user {{ primary_domain_user }} is not associated with domain {{ primary_domain }} - Step 3
    fail:
      msg: "User {{ primary_domain_user }} is not associated with domain {{ primary_domain }}"
    when: get_home_dir_user_2.stdout == "no"

  # nginx/php-fpm
  - name: Remove /etc/nginx/conf.d/{{ primary_domain }}.conf
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "/etc/nginx/conf.d/{{ primary_domain }}.conf"
      - "/etc/nginx/ssl/{{ primary_domain }}.crt"
      - "/etc/nginx/ssl/{{ primary_domain }}.key"
      - "/etc/nginx/ssl/{{ primary_domain }}.csr"
      - "/etc/haproxy/ssl/{{ primary_domain }}.keycacrt.crt"

  - set_fact:
      acl_to_remove: "d_{{ primary_domain | replace('.', '_') }}"

  - name: remove acls from /etc/haproxy/haproxy.conf
    lineinfile:
      path: /etc/haproxy/haproxy.cfg
      state: absent
      regexp: ".*{{ acl_to_remove | regex_escape() }}.*"

  # restart services
  - name: Reload Nginx
    systemd:
      name: nginx
      state: reloaded

  - name: Reload Haproxy
    systemd:
      name: haproxy
      state: reloaded

  - name: Check if /etc/opt/remi/php74/php-fpm.d/{{ primary_domain }}.conf exist
    stat:
      path: "/etc/opt/remi/php74/php-fpm.d/{{ primary_domain }}.conf"
    register: php_fpm_74

  - name: Check if /etc/opt/remi/php73/php-fpm.d/{{ primary_domain }}.conf exist
    stat:
      path: "/etc/opt/remi/php73/php-fpm.d/{{ primary_domain }}.conf"
    register: php_fpm_73

  - name: Remove /etc/opt/remi/php73/php-fpm.d/{{ primary_domain }}.conf
    file:
      path: "/etc/opt/remi/php73/php-fpm.d/{{ primary_domain }}.conf"
      state: absent
    when: php_fpm_73.stat.exists

  - name: Remove /etc/opt/remi/php74/php-fpm.d/{{ primary_domain }}.conf
    file:
      path: "/etc/opt/remi/php74/php-fpm.d/{{ primary_domain }}.conf"
      state: absent
    when: php_fpm_74.stat.exists

  - name: Reload php73-php-fpm
    systemd:
      name: php73-php-fpm
      state: reloaded
    when: php_fpm_73.stat.exists

  - name: Reload php73-php-fpm
    systemd:
      name: php74-php-fpm
      state: reloaded
    when: php_fpm_74.stat.exists

  # remove user / group
  - name: Remove symlink for user {{ primary_domain_user }}
    file:
      path: "/home/{{ primary_domain_user }}"
      state: absent

  - name: Remove storage directory for user {{ primary_domain_user }}
    file:
      path: "/storage/websites/{{ primary_domain_user }}"
      state: absent

  - name: Remove the user {{ primary_domain_user }}
    user:
      name: "{{ primary_domain_user }}"
      state: absent

  - name: Remove the group {{ primary_domain_user }}
    group:
      name: "{{ primary_domain_user }}"
      state: absent